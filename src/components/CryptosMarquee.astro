---
import { formatCurrency, getVariationRate } from '@/utils'

type Props = {
  classes?: string
}

type newData = { rate: number; asset_id_base: string; asset_id_quote: string }

type oldData = { rate_close: number }

type DataType = [newData, oldData]

const assets = ['BTC', 'ETH', 'XRP']

type RequestDataType = [newData, oldData[]]

const { classes } = Astro.props

const assetsPromises = assets.map(async (asset) => {
  const ratesPromises = [
    fetch(`${import.meta.env.COINAPI_BASE_URL}/exchangerate/${asset}/USD`, {
      headers: { 'X-CoinAPI-Key': import.meta.env.COINAPI_KEY },
    }).then((res) => res.json()),
    fetch(
      `${
        import.meta.env.COINAPI_BASE_URL
      }/exchangerate/${asset}/USD/history?period_id=1HRS&limit=1`,
      {
        headers: { 'X-CoinAPI-Key': import.meta.env.COINAPI_KEY },
      }
    ).then((res) => res.json()),
  ]

  const data = Promise.all(ratesPromises)

  return await data
})

const response = Promise.all(assetsPromises)

const data = (await response) as unknown as RequestDataType[]

const assetsFormated = data.map((asset) => {
  const [newData, oldData] = asset.flat() as unknown as DataType

  return {
    assetLabel: newData.asset_id_base,
    assetQuote: newData.asset_id_quote,
    rate: formatCurrency(newData.rate),
    variation: getVariationRate(newData.rate, oldData.rate_close).slice(0, -1),
  }
})
---

<div
  class:list={['cryptos-marquee', 'fluid-type', classes]}
  style="--font-size-min: var(--font-size-12); --font-size-max: var(--font-size-14);"
>
  <div class="cryptos-marquee__container">
    {
      [...new Array(2)].map(() => (
        <div class="cryptos-marquee__content">
          {assetsFormated.map((asset) => (
            <div class="cryptos-marquee__item">
              <span class="cryptos-marquee__coin">{asset.assetLabel}</span>

              <span>{asset.rate}</span>

              <span
                class:list={{
                  'cryptos-marquee--rise': asset.variation.startsWith('+'),
                  'cryptos-marquee--drop': asset.variation.startsWith('-'),
                }}
              >
                {asset.variation}
              </span>
            </div>
          ))}
        </div>
      ))
    }
  </div>
</div>

<style>
  @keyframes marquee {
    0% {
      left: 0;
    }
    100% {
      left: -100%;
    }
  }

  .cryptos-marquee {
    min-height: 1.5rem;
    box-shadow: var(--box-shadow);
    overflow: hidden;
    white-space: nowrap;
    position: relative;
    width: 100%;
  }

  .cryptos-marquee__container {
    width: 200%;
    position: absolute;
    top: 0;
    left: 0;
    overflow: hidden;
    animation: marquee 8s linear infinite;
  }

  .cryptos-marquee__container {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    height: 100%;

    & > div:not(:last-child) {
      margin-right: 2em;
    }
  }

  .cryptos-marquee__content {
    display: flex;
    align-items: center;
    max-width: 100vw;
    overflow: hidden;
    gap: 2em;
  }

  .cryptos-marquee__item {
    display: flex;
    gap: 0.5em;
  }

  .cryptos-marquee__coin {
    color: var(--gray-800);
  }

  .cryptos-marquee--rise {
    color: var(--green-700);
  }

  .cryptos-marquee--drop {
    color: var(--red-700);
  }
</style>
