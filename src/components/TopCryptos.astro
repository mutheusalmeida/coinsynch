---
import TopCryptosItem from './TopCryptosItem.astro'
import minusIcon from '@/assets/minus-icon.svg'
import plusIcon from '@/assets/plus-icon.svg'
import type { IconRequestType } from '@/resources/types'
import Image from 'astro/components/Image.astro'

type DataType = {
  asset_id: string
  url: string
  asset_name: string
}

// assets that we want
const assets = [
  {
    asset_name: 'Bitcoin',
    asset_id: 'BTC',
  },
  {
    asset_name: 'Ethereum',
    asset_id: 'ETH',
  },
  {
    asset_name: 'Tether',
    asset_id: 'USDT',
  },
  {
    asset_name: 'XRP',
    asset_id: 'XRP',
  },
  {
    asset_name: 'Bitcoin Cash',
    asset_id: 'BCH',
  },
  {
    asset_name: 'Monero',
    asset_id: 'XMR',
  },
  {
    asset_name: 'Dogecoin',
    asset_id: 'DOGE',
  },
  {
    asset_name: 'Cardano',
    asset_id: 'ADA',
  },
  {
    asset_name: 'Litecoin',
    asset_id: 'LTC',
  },
  {
    asset_name: 'TRON',
    asset_id: 'TRX',
  },
]

// fallback icons
let fallbackIcons: IconRequestType[] = [
  {
    asset_id: 'BTC',
    url: 'https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_32/4caf2b16a0174e26a3482cea69c34cba.png',
  },
  {
    asset_id: 'XMR',
    url: 'https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_32/e342d99d4648423e9fb5f68785dd2adf.png',
  },
  {
    asset_id: 'BCH',
    url: 'https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_32/a7587cc1505544ecbc577b56f17d38f9.png',
  },
  {
    asset_id: 'ADA',
    url: 'https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_32/2701173b1b7740f286939659359e225c.png',
  },
  {
    asset_id: 'TRX',
    url: 'https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_32/2fb39015430a4945a6458407b6c0fdc5.png',
  },
  {
    asset_id: 'ETH',
    url: 'https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_32/604ae4533d9f4ad09a489905cce617c2.png',
  },
  {
    asset_id: 'XRP',
    url: 'https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_32/ba90bcb0cafb4801ac5dd310f47d6411.png',
  },
  {
    asset_id: 'USDT',
    url: 'https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_32/5ed65416963e4e57998a3c302da8936e.png',
  },
  {
    asset_id: 'DOGE',
    url: 'https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_32/63e240f3047f41c791796784bc719f63.png',
  },
  {
    asset_id: 'LTC',
    url: 'https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_32/a201762f149941ef9b84e0742cd00e48.png',
  },
]

// format icons
function formatIcons(
  icons: IconRequestType[],
  asset: {
    asset_name: string
    asset_id: string
  }
) {
  return icons.reduce((acc, curr) => {
    if (curr.asset_id === asset.asset_id) {
      return {
        ...asset,
        ...curr,
      }
    }

    return {
      ...acc,
    }
  }, {})
}

let response
let data: DataType[] | null = null

try {
  response = await fetch(
    `${import.meta.env.COINAPI_BASE_URL}/assets/icons/32`,
    {
      headers: { 'X-CoinAPI-Key': import.meta.env.COINAPI_KEY },
    }
  )
} catch (error) {
  console.log('There was an error', error)
  data = assets.map((asset) => formatIcons(fallbackIcons, asset)) as DataType[]
}

if (response?.ok) {
  let icons: IconRequestType[] = await response.json()

  data = assets.map((asset) => formatIcons(icons, asset)) as DataType[]
} else {
  console.log(`HTTP Response Code: ${response?.status}`)
  data = assets.map((asset) => formatIcons(fallbackIcons, asset)) as DataType[]
}
---

<section
  class="fluid-spacing fluid-px"
  style="--spacing-min: 1rem; --spacing-max: 7rem;"
  id="top-cryptos"
>
  <div
    class="top-cryptos fluid-spacing fluid-py"
    style="--spacing-min: 5.5rem; --spacing-max: 7.5rem;"
  >
    <h3
      class="top-cryptos__title fluid-type"
      style="--font-size-min: var(--font-size-20); --font-size-max: var(--font-size-32);"
    >
      Top cryptos
    </h3>

    <div>
      <div class="cryptos-thead">
        <span class="cryptos-thead__th">#</span>

        <span class="cryptos-thead__th cryptos-thead__th--crypto">Crypto</span>

        <span class="cryptos-thead__th">Price</span>

        <span class="cryptos-thead__th">Change</span>

        <span class="cryptos-thead__th">Trade</span>

        <span class="cryptos-thead__th cryptos-thead__th--actions">Actions</span
        >
      </div>

      <div class="cryptos-tbody">
        {
          data?.slice(0, 5).map((asset, index) => (
            <div>
              <TopCryptosItem
                name={asset.asset_name}
                url={asset.url}
                id={asset.asset_id}
                index={index + 1}
              />
            </div>
          ))
        }

        <div
          data-js="expander-list"
          class="expander"
          style="--transition-duration: 0.4s;"
        >
          <div class="expander-content">
            {
              data?.slice(5, 10).map((asset, index) => (
                <div>
                  <TopCryptosItem
                    name={asset.asset_name}
                    url={asset.url}
                    id={asset.asset_id}
                    index={index + 5 + 1}
                  />
                </div>
              ))
            }
          </div>
        </div>

        <button class="cryptos-tbody__view-more" data-js="expander-list-toggle">
          <span class="text">View more</span>

          <Image class="plus" src={plusIcon} alt="Expand icon" />

          <Image class="minus" src={minusIcon} alt="Expand icon" />
        </button>
      </div>
    </div>
  </div>
</section>

<style>
  .top-cryptos {
    display: flex;
    flex-direction: column;
  }

  .top-cryptos__title {
    line-height: var(--line-height-32);
    margin-bottom: 0.8em;
    text-transform: capitalize;
    text-align: center;
  }

  .cryptos-thead {
    display: flex;
    justify-content: space-between;
    padding: 0 1em;
  }

  .cryptos-thead__th {
    font-size: 0.75rem;
    color: var(--gray-500);
    line-height: var(--line-height-14);
  }

  .cryptos-tbody {
    margin-top: 0.5em;

    & > div:nth-child(-n + 5):nth-child(even) {
      background-color: rgba(246, 246, 246, 0.5);
    }
  }

  .expander-content {
    & div:nth-child(odd) {
      background-color: rgba(246, 246, 246, 0.5);
    }
  }

  .cryptos-tbody__view-more {
    margin: 0 auto;
    display: flex;
    align-items: center;
    gap: 0.5em;
    font-size: 1rem;
    line-height: var(--line-height-24);
    color: var(--orange-500);
    background-color: transparent;
    border: none;
    padding: 0;
    margin-top: 1em;
    cursor: pointer;

    & .minus {
      display: none;
    }
  }

  .cryptos-thead {
    & > span:not(.cryptos-thead__th--actions, .cryptos-thead__th--crypto) {
      display: none;
    }
  }

  @media (min-width: 48em) {
    .cryptos-thead__th {
      font-size: 0.875rem;
      color: var(--gray-500);
      line-height: var(--line-height-16);
    }

    .cryptos-thead {
      display: grid;
      grid-template-columns: 1fr 4fr 3fr 2fr 5em;
      padding: 1em 1.5em;
      align-items: center;
    }

    .cryptos-thead {
      & > span:not(.cryptos-thead__th--actions, .cryptos-thead__th--crypto) {
        display: initial;
      }
    }

    .cryptos-thead__th--actions {
      display: none;
    }
  }

  @media (min-width: 90em) {
    .top-cryptos__title {
      line-height: var(--line-height-40);
      margin-bottom: 1.5em;
    }

    .cryptos-thead {
      display: grid;
      grid-template-columns: 1fr 2fr 2fr 2fr 5em;
    }
  }
</style>

<script>
  const expander = document.querySelector('[data-js="expander-list"]')
  const toggle = document.querySelector('[data-js="expander-list-toggle"]')

  if (toggle && expander) {
    toggle.addEventListener('click', () => {
      expander.classList.toggle('expanded')
      const iconMinus = toggle.querySelector<HTMLImageElement>('.minus')
      const iconPlus = toggle.querySelector<HTMLImageElement>('.plus')
      const text = toggle.querySelector<HTMLImageElement>('.text')

      if (iconMinus && iconPlus && text) {
        if (expander.classList.contains('expanded')) {
          text.textContent = 'View less'

          iconMinus.style.display = 'initial'
          iconPlus.style.display = 'none'
        } else {
          text.textContent = 'View more'
          iconMinus.style.display = 'none'
          iconPlus.style.display = 'Initial'
        }
      }
    })
  }
</script>
